/*
 * LogistiqoAPI
 *   - Go to [Swagger Editor](https://editor.swagger.io/?url=https://raw.githubusercontent.com/habatlogistiqocom/logistiqoSwaggerYaml/main/logistiqoSwaggerYaml.yaml)   An API, or Application Programming Interface, is a set of protocols,   routines, and tools that enable different software applications to   communicate and exchange data with each other. It defines how software   components should interact and helps to simplify software development by   abstracting the underlying implementation. APIs are essential for building   complex and interconnected software systems.       ## Contact Us     If you have problems or questions, please read the following information:     - [FAQ](https://www.logistiqo.com/faq/)    - [Contact us](https://www.logistiqo.com/contact.php)     To stay informed about the latest developments, you can     - Follow us on [Twitter](https://twitter.com/logistiqo/),
 *
 * OpenAPI spec version: 1.0
 * Contact: info@logistiqo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.DirectDetails;
import io.swagger.client.model.InvoiceContracts;
import io.swagger.client.model.InvoiceShipments;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * Invoice
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T15:42:11.807009033Z[GMT]")

public class Invoice {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("idInvoiceType")
  private Integer idInvoiceType = null;

  @SerializedName("number")
  private String number = null;

  @SerializedName("invoiceDate")
  private OffsetDateTime invoiceDate = null;

  @SerializedName("postingDate")
  private OffsetDateTime postingDate = null;

  @SerializedName("invoiceText")
  private String invoiceText = null;

  @SerializedName("companyNote")
  private String companyNote = null;

  @SerializedName("period")
  private String period = null;

  @SerializedName("dueDate")
  private OffsetDateTime dueDate = null;

  @SerializedName("invoiceAmount")
  private Double invoiceAmount = null;

  @SerializedName("vatAmount")
  private Double vatAmount = null;

  @SerializedName("printed")
  private Boolean printed = null;

  @SerializedName("mailed")
  private Boolean mailed = null;

  @SerializedName("paid")
  private Boolean paid = null;

  @SerializedName("paidOn")
  private OffsetDateTime paidOn = null;

  @SerializedName("taxExempt")
  private Boolean taxExempt = null;

  @SerializedName("taxCase")
  private Integer taxCase = null;

  @SerializedName("overrideTaxCase")
  private Boolean overrideTaxCase = null;

  @SerializedName("canceled")
  private Boolean canceled = null;

  @SerializedName("creditAllocation")
  private Boolean creditAllocation = null;

  @SerializedName("correctiveInvoice")
  private Boolean correctiveInvoice = null;

  @SerializedName("noDiscount")
  private Boolean noDiscount = null;

  @SerializedName("allocatedCreditNote")
  private String allocatedCreditNote = null;

  @SerializedName("createdOn")
  private OffsetDateTime createdOn = null;

  @SerializedName("createdBy")
  private String createdBy = null;

  @SerializedName("modifiedOn")
  private OffsetDateTime modifiedOn = null;

  @SerializedName("modifiedBy")
  private String modifiedBy = null;

  @SerializedName("contactPerson")
  private AllOfInvoiceContactPerson contactPerson = null;

  @SerializedName("paymentTerms")
  private AllOfInvoicePaymentTerms paymentTerms = null;

  @SerializedName("customer")
  private AllOfInvoiceCustomer customer = null;

  @SerializedName("invoiceReceiver")
  private AllOfInvoiceInvoiceReceiver invoiceReceiver = null;

  @SerializedName("directDetails")
  private List<DirectDetails> directDetails = null;

  @SerializedName("invoiceContract")
  private List<InvoiceContracts> invoiceContract = null;

  @SerializedName("invoiceShipment")
  private List<InvoiceShipments> invoiceShipment = null;

  public Invoice id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Invoice idInvoiceType(Integer idInvoiceType) {
    this.idInvoiceType = idInvoiceType;
    return this;
  }

   /**
   * Get idInvoiceType
   * @return idInvoiceType
  **/
  @Schema(description = "")
  public Integer getIdInvoiceType() {
    return idInvoiceType;
  }

  public void setIdInvoiceType(Integer idInvoiceType) {
    this.idInvoiceType = idInvoiceType;
  }

  public Invoice number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @Schema(description = "")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public Invoice invoiceDate(OffsetDateTime invoiceDate) {
    this.invoiceDate = invoiceDate;
    return this;
  }

   /**
   * Get invoiceDate
   * @return invoiceDate
  **/
  @Schema(description = "")
  public OffsetDateTime getInvoiceDate() {
    return invoiceDate;
  }

  public void setInvoiceDate(OffsetDateTime invoiceDate) {
    this.invoiceDate = invoiceDate;
  }

  public Invoice postingDate(OffsetDateTime postingDate) {
    this.postingDate = postingDate;
    return this;
  }

   /**
   * Get postingDate
   * @return postingDate
  **/
  @Schema(description = "")
  public OffsetDateTime getPostingDate() {
    return postingDate;
  }

  public void setPostingDate(OffsetDateTime postingDate) {
    this.postingDate = postingDate;
  }

  public Invoice invoiceText(String invoiceText) {
    this.invoiceText = invoiceText;
    return this;
  }

   /**
   * Get invoiceText
   * @return invoiceText
  **/
  @Schema(description = "")
  public String getInvoiceText() {
    return invoiceText;
  }

  public void setInvoiceText(String invoiceText) {
    this.invoiceText = invoiceText;
  }

  public Invoice companyNote(String companyNote) {
    this.companyNote = companyNote;
    return this;
  }

   /**
   * Get companyNote
   * @return companyNote
  **/
  @Schema(description = "")
  public String getCompanyNote() {
    return companyNote;
  }

  public void setCompanyNote(String companyNote) {
    this.companyNote = companyNote;
  }

  public Invoice period(String period) {
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @Schema(description = "")
  public String getPeriod() {
    return period;
  }

  public void setPeriod(String period) {
    this.period = period;
  }

  public Invoice dueDate(OffsetDateTime dueDate) {
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Get dueDate
   * @return dueDate
  **/
  @Schema(description = "")
  public OffsetDateTime getDueDate() {
    return dueDate;
  }

  public void setDueDate(OffsetDateTime dueDate) {
    this.dueDate = dueDate;
  }

  public Invoice invoiceAmount(Double invoiceAmount) {
    this.invoiceAmount = invoiceAmount;
    return this;
  }

   /**
   * Get invoiceAmount
   * @return invoiceAmount
  **/
  @Schema(description = "")
  public Double getInvoiceAmount() {
    return invoiceAmount;
  }

  public void setInvoiceAmount(Double invoiceAmount) {
    this.invoiceAmount = invoiceAmount;
  }

  public Invoice vatAmount(Double vatAmount) {
    this.vatAmount = vatAmount;
    return this;
  }

   /**
   * Get vatAmount
   * @return vatAmount
  **/
  @Schema(description = "")
  public Double getVatAmount() {
    return vatAmount;
  }

  public void setVatAmount(Double vatAmount) {
    this.vatAmount = vatAmount;
  }

  public Invoice printed(Boolean printed) {
    this.printed = printed;
    return this;
  }

   /**
   * Get printed
   * @return printed
  **/
  @Schema(description = "")
  public Boolean isPrinted() {
    return printed;
  }

  public void setPrinted(Boolean printed) {
    this.printed = printed;
  }

  public Invoice mailed(Boolean mailed) {
    this.mailed = mailed;
    return this;
  }

   /**
   * Get mailed
   * @return mailed
  **/
  @Schema(description = "")
  public Boolean isMailed() {
    return mailed;
  }

  public void setMailed(Boolean mailed) {
    this.mailed = mailed;
  }

  public Invoice paid(Boolean paid) {
    this.paid = paid;
    return this;
  }

   /**
   * Get paid
   * @return paid
  **/
  @Schema(description = "")
  public Boolean isPaid() {
    return paid;
  }

  public void setPaid(Boolean paid) {
    this.paid = paid;
  }

  public Invoice paidOn(OffsetDateTime paidOn) {
    this.paidOn = paidOn;
    return this;
  }

   /**
   * Get paidOn
   * @return paidOn
  **/
  @Schema(description = "")
  public OffsetDateTime getPaidOn() {
    return paidOn;
  }

  public void setPaidOn(OffsetDateTime paidOn) {
    this.paidOn = paidOn;
  }

  public Invoice taxExempt(Boolean taxExempt) {
    this.taxExempt = taxExempt;
    return this;
  }

   /**
   * Get taxExempt
   * @return taxExempt
  **/
  @Schema(description = "")
  public Boolean isTaxExempt() {
    return taxExempt;
  }

  public void setTaxExempt(Boolean taxExempt) {
    this.taxExempt = taxExempt;
  }

  public Invoice taxCase(Integer taxCase) {
    this.taxCase = taxCase;
    return this;
  }

   /**
   * Get taxCase
   * @return taxCase
  **/
  @Schema(description = "")
  public Integer getTaxCase() {
    return taxCase;
  }

  public void setTaxCase(Integer taxCase) {
    this.taxCase = taxCase;
  }

  public Invoice overrideTaxCase(Boolean overrideTaxCase) {
    this.overrideTaxCase = overrideTaxCase;
    return this;
  }

   /**
   * Get overrideTaxCase
   * @return overrideTaxCase
  **/
  @Schema(description = "")
  public Boolean isOverrideTaxCase() {
    return overrideTaxCase;
  }

  public void setOverrideTaxCase(Boolean overrideTaxCase) {
    this.overrideTaxCase = overrideTaxCase;
  }

  public Invoice canceled(Boolean canceled) {
    this.canceled = canceled;
    return this;
  }

   /**
   * Get canceled
   * @return canceled
  **/
  @Schema(description = "")
  public Boolean isCanceled() {
    return canceled;
  }

  public void setCanceled(Boolean canceled) {
    this.canceled = canceled;
  }

  public Invoice creditAllocation(Boolean creditAllocation) {
    this.creditAllocation = creditAllocation;
    return this;
  }

   /**
   * Get creditAllocation
   * @return creditAllocation
  **/
  @Schema(description = "")
  public Boolean isCreditAllocation() {
    return creditAllocation;
  }

  public void setCreditAllocation(Boolean creditAllocation) {
    this.creditAllocation = creditAllocation;
  }

  public Invoice correctiveInvoice(Boolean correctiveInvoice) {
    this.correctiveInvoice = correctiveInvoice;
    return this;
  }

   /**
   * Get correctiveInvoice
   * @return correctiveInvoice
  **/
  @Schema(description = "")
  public Boolean isCorrectiveInvoice() {
    return correctiveInvoice;
  }

  public void setCorrectiveInvoice(Boolean correctiveInvoice) {
    this.correctiveInvoice = correctiveInvoice;
  }

  public Invoice noDiscount(Boolean noDiscount) {
    this.noDiscount = noDiscount;
    return this;
  }

   /**
   * Get noDiscount
   * @return noDiscount
  **/
  @Schema(description = "")
  public Boolean isNoDiscount() {
    return noDiscount;
  }

  public void setNoDiscount(Boolean noDiscount) {
    this.noDiscount = noDiscount;
  }

  public Invoice allocatedCreditNote(String allocatedCreditNote) {
    this.allocatedCreditNote = allocatedCreditNote;
    return this;
  }

   /**
   * Get allocatedCreditNote
   * @return allocatedCreditNote
  **/
  @Schema(description = "")
  public String getAllocatedCreditNote() {
    return allocatedCreditNote;
  }

  public void setAllocatedCreditNote(String allocatedCreditNote) {
    this.allocatedCreditNote = allocatedCreditNote;
  }

  public Invoice createdOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
  }

  public Invoice createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @Schema(description = "")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public Invoice modifiedOn(OffsetDateTime modifiedOn) {
    this.modifiedOn = modifiedOn;
    return this;
  }

   /**
   * Get modifiedOn
   * @return modifiedOn
  **/
  @Schema(description = "")
  public OffsetDateTime getModifiedOn() {
    return modifiedOn;
  }

  public void setModifiedOn(OffsetDateTime modifiedOn) {
    this.modifiedOn = modifiedOn;
  }

  public Invoice modifiedBy(String modifiedBy) {
    this.modifiedBy = modifiedBy;
    return this;
  }

   /**
   * Get modifiedBy
   * @return modifiedBy
  **/
  @Schema(description = "")
  public String getModifiedBy() {
    return modifiedBy;
  }

  public void setModifiedBy(String modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  public Invoice contactPerson(AllOfInvoiceContactPerson contactPerson) {
    this.contactPerson = contactPerson;
    return this;
  }

   /**
   * Get contactPerson
   * @return contactPerson
  **/
  @Schema(description = "")
  public AllOfInvoiceContactPerson getContactPerson() {
    return contactPerson;
  }

  public void setContactPerson(AllOfInvoiceContactPerson contactPerson) {
    this.contactPerson = contactPerson;
  }

  public Invoice paymentTerms(AllOfInvoicePaymentTerms paymentTerms) {
    this.paymentTerms = paymentTerms;
    return this;
  }

   /**
   * Get paymentTerms
   * @return paymentTerms
  **/
  @Schema(description = "")
  public AllOfInvoicePaymentTerms getPaymentTerms() {
    return paymentTerms;
  }

  public void setPaymentTerms(AllOfInvoicePaymentTerms paymentTerms) {
    this.paymentTerms = paymentTerms;
  }

  public Invoice customer(AllOfInvoiceCustomer customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @Schema(description = "")
  public AllOfInvoiceCustomer getCustomer() {
    return customer;
  }

  public void setCustomer(AllOfInvoiceCustomer customer) {
    this.customer = customer;
  }

  public Invoice invoiceReceiver(AllOfInvoiceInvoiceReceiver invoiceReceiver) {
    this.invoiceReceiver = invoiceReceiver;
    return this;
  }

   /**
   * Get invoiceReceiver
   * @return invoiceReceiver
  **/
  @Schema(description = "")
  public AllOfInvoiceInvoiceReceiver getInvoiceReceiver() {
    return invoiceReceiver;
  }

  public void setInvoiceReceiver(AllOfInvoiceInvoiceReceiver invoiceReceiver) {
    this.invoiceReceiver = invoiceReceiver;
  }

  public Invoice directDetails(List<DirectDetails> directDetails) {
    this.directDetails = directDetails;
    return this;
  }

  public Invoice addDirectDetailsItem(DirectDetails directDetailsItem) {
    if (this.directDetails == null) {
      this.directDetails = new ArrayList<DirectDetails>();
    }
    this.directDetails.add(directDetailsItem);
    return this;
  }

   /**
   * Get directDetails
   * @return directDetails
  **/
  @Schema(description = "")
  public List<DirectDetails> getDirectDetails() {
    return directDetails;
  }

  public void setDirectDetails(List<DirectDetails> directDetails) {
    this.directDetails = directDetails;
  }

  public Invoice invoiceContract(List<InvoiceContracts> invoiceContract) {
    this.invoiceContract = invoiceContract;
    return this;
  }

  public Invoice addInvoiceContractItem(InvoiceContracts invoiceContractItem) {
    if (this.invoiceContract == null) {
      this.invoiceContract = new ArrayList<InvoiceContracts>();
    }
    this.invoiceContract.add(invoiceContractItem);
    return this;
  }

   /**
   * Get invoiceContract
   * @return invoiceContract
  **/
  @Schema(description = "")
  public List<InvoiceContracts> getInvoiceContract() {
    return invoiceContract;
  }

  public void setInvoiceContract(List<InvoiceContracts> invoiceContract) {
    this.invoiceContract = invoiceContract;
  }

  public Invoice invoiceShipment(List<InvoiceShipments> invoiceShipment) {
    this.invoiceShipment = invoiceShipment;
    return this;
  }

  public Invoice addInvoiceShipmentItem(InvoiceShipments invoiceShipmentItem) {
    if (this.invoiceShipment == null) {
      this.invoiceShipment = new ArrayList<InvoiceShipments>();
    }
    this.invoiceShipment.add(invoiceShipmentItem);
    return this;
  }

   /**
   * Get invoiceShipment
   * @return invoiceShipment
  **/
  @Schema(description = "")
  public List<InvoiceShipments> getInvoiceShipment() {
    return invoiceShipment;
  }

  public void setInvoiceShipment(List<InvoiceShipments> invoiceShipment) {
    this.invoiceShipment = invoiceShipment;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Invoice invoice = (Invoice) o;
    return Objects.equals(this.id, invoice.id) &&
        Objects.equals(this.idInvoiceType, invoice.idInvoiceType) &&
        Objects.equals(this.number, invoice.number) &&
        Objects.equals(this.invoiceDate, invoice.invoiceDate) &&
        Objects.equals(this.postingDate, invoice.postingDate) &&
        Objects.equals(this.invoiceText, invoice.invoiceText) &&
        Objects.equals(this.companyNote, invoice.companyNote) &&
        Objects.equals(this.period, invoice.period) &&
        Objects.equals(this.dueDate, invoice.dueDate) &&
        Objects.equals(this.invoiceAmount, invoice.invoiceAmount) &&
        Objects.equals(this.vatAmount, invoice.vatAmount) &&
        Objects.equals(this.printed, invoice.printed) &&
        Objects.equals(this.mailed, invoice.mailed) &&
        Objects.equals(this.paid, invoice.paid) &&
        Objects.equals(this.paidOn, invoice.paidOn) &&
        Objects.equals(this.taxExempt, invoice.taxExempt) &&
        Objects.equals(this.taxCase, invoice.taxCase) &&
        Objects.equals(this.overrideTaxCase, invoice.overrideTaxCase) &&
        Objects.equals(this.canceled, invoice.canceled) &&
        Objects.equals(this.creditAllocation, invoice.creditAllocation) &&
        Objects.equals(this.correctiveInvoice, invoice.correctiveInvoice) &&
        Objects.equals(this.noDiscount, invoice.noDiscount) &&
        Objects.equals(this.allocatedCreditNote, invoice.allocatedCreditNote) &&
        Objects.equals(this.createdOn, invoice.createdOn) &&
        Objects.equals(this.createdBy, invoice.createdBy) &&
        Objects.equals(this.modifiedOn, invoice.modifiedOn) &&
        Objects.equals(this.modifiedBy, invoice.modifiedBy) &&
        Objects.equals(this.contactPerson, invoice.contactPerson) &&
        Objects.equals(this.paymentTerms, invoice.paymentTerms) &&
        Objects.equals(this.customer, invoice.customer) &&
        Objects.equals(this.invoiceReceiver, invoice.invoiceReceiver) &&
        Objects.equals(this.directDetails, invoice.directDetails) &&
        Objects.equals(this.invoiceContract, invoice.invoiceContract) &&
        Objects.equals(this.invoiceShipment, invoice.invoiceShipment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, idInvoiceType, number, invoiceDate, postingDate, invoiceText, companyNote, period, dueDate, invoiceAmount, vatAmount, printed, mailed, paid, paidOn, taxExempt, taxCase, overrideTaxCase, canceled, creditAllocation, correctiveInvoice, noDiscount, allocatedCreditNote, createdOn, createdBy, modifiedOn, modifiedBy, contactPerson, paymentTerms, customer, invoiceReceiver, directDetails, invoiceContract, invoiceShipment);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Invoice {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idInvoiceType: ").append(toIndentedString(idInvoiceType)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    invoiceDate: ").append(toIndentedString(invoiceDate)).append("\n");
    sb.append("    postingDate: ").append(toIndentedString(postingDate)).append("\n");
    sb.append("    invoiceText: ").append(toIndentedString(invoiceText)).append("\n");
    sb.append("    companyNote: ").append(toIndentedString(companyNote)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    invoiceAmount: ").append(toIndentedString(invoiceAmount)).append("\n");
    sb.append("    vatAmount: ").append(toIndentedString(vatAmount)).append("\n");
    sb.append("    printed: ").append(toIndentedString(printed)).append("\n");
    sb.append("    mailed: ").append(toIndentedString(mailed)).append("\n");
    sb.append("    paid: ").append(toIndentedString(paid)).append("\n");
    sb.append("    paidOn: ").append(toIndentedString(paidOn)).append("\n");
    sb.append("    taxExempt: ").append(toIndentedString(taxExempt)).append("\n");
    sb.append("    taxCase: ").append(toIndentedString(taxCase)).append("\n");
    sb.append("    overrideTaxCase: ").append(toIndentedString(overrideTaxCase)).append("\n");
    sb.append("    canceled: ").append(toIndentedString(canceled)).append("\n");
    sb.append("    creditAllocation: ").append(toIndentedString(creditAllocation)).append("\n");
    sb.append("    correctiveInvoice: ").append(toIndentedString(correctiveInvoice)).append("\n");
    sb.append("    noDiscount: ").append(toIndentedString(noDiscount)).append("\n");
    sb.append("    allocatedCreditNote: ").append(toIndentedString(allocatedCreditNote)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    modifiedOn: ").append(toIndentedString(modifiedOn)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    contactPerson: ").append(toIndentedString(contactPerson)).append("\n");
    sb.append("    paymentTerms: ").append(toIndentedString(paymentTerms)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    invoiceReceiver: ").append(toIndentedString(invoiceReceiver)).append("\n");
    sb.append("    directDetails: ").append(toIndentedString(directDetails)).append("\n");
    sb.append("    invoiceContract: ").append(toIndentedString(invoiceContract)).append("\n");
    sb.append("    invoiceShipment: ").append(toIndentedString(invoiceShipment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
