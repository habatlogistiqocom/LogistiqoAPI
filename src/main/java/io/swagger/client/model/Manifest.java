/*
 * LogistiqoAPI
 *   - Go to [Swagger Editor](https://editor.swagger.io/?url=https://raw.githubusercontent.com/habatlogistiqocom/logistiqoSwaggerYaml/main/logistiqoSwaggerYaml.yaml)   An API, or Application Programming Interface, is a set of protocols,   routines, and tools that enable different software applications to   communicate and exchange data with each other. It defines how software   components should interact and helps to simplify software development by   abstracting the underlying implementation. APIs are essential for building   complex and interconnected software systems.       ## Contact Us     If you have problems or questions, please read the following information:     - [FAQ](https://www.logistiqo.com/faq/)    - [Contact us](https://www.logistiqo.com/contact.php)     To stay informed about the latest developments, you can     - Follow us on [Twitter](https://twitter.com/logistiqo/),
 *
 * OpenAPI spec version: 1.0
 * Contact: info@logistiqo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Shipment;
import io.swagger.client.model.UnitLoadDevice;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Manifest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-12-08T15:23:34.163430093Z[GMT]")

public class Manifest {
  @SerializedName("createManifest")
  private Boolean createManifest = false;

  @SerializedName("createHawb")
  private Boolean createHawb = false;

  @SerializedName("synchronizeShipments")
  private Boolean synchronizeShipments = false;

  @SerializedName("manifestNumber")
  private String manifestNumber = null;

  @SerializedName("reference")
  private String reference = null;

  @SerializedName("manifestReference")
  private String manifestReference = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("mrn")
  private String mrn = null;

  @SerializedName("mawb")
  private String mawb = null;

  @SerializedName("airline")
  private String airline = null;

  @SerializedName("airportOfDeparture")
  private String airportOfDeparture = null;

  @SerializedName("finalDestination")
  private String finalDestination = null;

  @SerializedName("containerMode")
  private String containerMode = null;

  @SerializedName("deadline")
  private String deadline = null;

  @SerializedName("date")
  private String date = null;

  @SerializedName("dateto")
  private String dateto = null;

  @SerializedName("depot")
  private String depot = "DEPOT";

  @SerializedName("customerNumber")
  private String customerNumber = null;

  @SerializedName("customer")
  private AllOfManifestCustomer customer = null;

  @SerializedName("subcontractor")
  private AllOfManifestSubcontractor subcontractor = null;

  @SerializedName("vehicle")
  private AllOfManifestVehicle vehicle = null;

  @SerializedName("action")
  private String action = null;

  @SerializedName("flightNo")
  private String flightNo = null;

  @SerializedName("subcontractorInfo")
  private String subcontractorInfo = null;

  @SerializedName("subcontractorVehicleInfo")
  private String subcontractorVehicleInfo = null;

  @SerializedName("groundHandler")
  private AllOfManifestGroundHandler groundHandler = null;

  @SerializedName("shipper")
  private AllOfManifestShipper shipper = null;

  @SerializedName("consignee")
  private AllOfManifestConsignee consignee = null;

  @SerializedName("unitLoadDevices")
  private List<UnitLoadDevice> unitLoadDevices = null;

  @SerializedName("error")
  private Boolean error = null;

  @SerializedName("shipments")
  private List<Shipment> shipments = null;

  public Manifest createManifest(Boolean createManifest) {
    this.createManifest = createManifest;
    return this;
  }

   /**
   * If you specifically want to create shipments without a manifest, please keep the field at its default value \&quot;false\&quot;. However, if you require a manifest that includes all shipments, please set the field to \&quot;true\&quot;.
   * @return createManifest
  **/
  @Schema(description = "If you specifically want to create shipments without a manifest, please keep the field at its default value \"false\". However, if you require a manifest that includes all shipments, please set the field to \"true\".")
  public Boolean isCreateManifest() {
    return createManifest;
  }

  public void setCreateManifest(Boolean createManifest) {
    this.createManifest = createManifest;
  }

  public Manifest createHawb(Boolean createHawb) {
    this.createHawb = createHawb;
    return this;
  }

   /**
   * To facilitate the creation of a non-existing House Air Waybill (HAWB), kindly designate the relevant field as \&quot;true.\&quot; Conversely, if the shipment corresponds directly to the HAWB, set this field to \&quot;false.\&quot; Enabling this option will result in the generation of a manifest aligning with the specified HAWB details within the shipment.
   * @return createHawb
  **/
  @Schema(description = "To facilitate the creation of a non-existing House Air Waybill (HAWB), kindly designate the relevant field as \"true.\" Conversely, if the shipment corresponds directly to the HAWB, set this field to \"false.\" Enabling this option will result in the generation of a manifest aligning with the specified HAWB details within the shipment.")
  public Boolean isCreateHawb() {
    return createHawb;
  }

  public void setCreateHawb(Boolean createHawb) {
    this.createHawb = createHawb;
  }

  public Manifest synchronizeShipments(Boolean synchronizeShipments) {
    this.synchronizeShipments = synchronizeShipments;
    return this;
  }

   /**
   * If this field is set to true, the API will exclude and remove shipments that exist in the corresponding Logistiqo manifest but are not included here, ensuring synchronization and making the Logistiqo manifest equal to the current one. When this field is set to false, you can conveniently add individual shipments to an existing manifest that already includes shipments.
   * @return synchronizeShipments
  **/
  @Schema(description = "If this field is set to true, the API will exclude and remove shipments that exist in the corresponding Logistiqo manifest but are not included here, ensuring synchronization and making the Logistiqo manifest equal to the current one. When this field is set to false, you can conveniently add individual shipments to an existing manifest that already includes shipments.")
  public Boolean isSynchronizeShipments() {
    return synchronizeShipments;
  }

  public void setSynchronizeShipments(Boolean synchronizeShipments) {
    this.synchronizeShipments = synchronizeShipments;
  }

  public Manifest manifestNumber(String manifestNumber) {
    this.manifestNumber = manifestNumber;
    return this;
  }

   /**
   * This field, which holds the unique manifest number, is only significant when exporting manifests; it holds no relevance when importing manifests.         
   * @return manifestNumber
  **/
  @Schema(description = "This field, which holds the unique manifest number, is only significant when exporting manifests; it holds no relevance when importing manifests.         ")
  public String getManifestNumber() {
    return manifestNumber;
  }

  public void setManifestNumber(String manifestNumber) {
    this.manifestNumber = manifestNumber;
  }

  public Manifest reference(String reference) {
    this.reference = reference;
    return this;
  }

   /**
   * This field can hold either a unique random string or a unique ID, serving the purpose of preventing the generation of duplicate manifests. When the \&quot;consolidate\&quot; field is set to true, the manifest will not be duplicated; instead, it will be modified accordingly.
   * @return reference
  **/
  @Schema(example = "aliwhefn405lkj47hbsjgabjbkgxd213", description = "This field can hold either a unique random string or a unique ID, serving the purpose of preventing the generation of duplicate manifests. When the \"consolidate\" field is set to true, the manifest will not be duplicated; instead, it will be modified accordingly.")
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }

  public Manifest manifestReference(String manifestReference) {
    this.manifestReference = manifestReference;
    return this;
  }

   /**
   * This field serves as a pointer to the corresponding manifest. In the event that a manifest with this specified value is detected in Logistiqo, shipments will seamlessly integrate into the pre-existing manifest. Conversely, if no manifest is identified with this particular value, a new manifest will be generated.
   * @return manifestReference
  **/
  @Schema(example = "C023672", description = "This field serves as a pointer to the corresponding manifest. In the event that a manifest with this specified value is detected in Logistiqo, shipments will seamlessly integrate into the pre-existing manifest. Conversely, if no manifest is identified with this particular value, a new manifest will be generated.")
  public String getManifestReference() {
    return manifestReference;
  }

  public void setManifestReference(String manifestReference) {
    this.manifestReference = manifestReference;
  }

  public Manifest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * This field can contain e free text describing the manifest
   * @return description
  **/
  @Schema(description = "This field can contain e free text describing the manifest")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Manifest mrn(String mrn) {
    this.mrn = mrn;
    return this;
  }

   /**
   * If this manifest represents a Master Reference Number, the field should contain a valid Master Reference Number.
   * @return mrn
  **/
  @Schema(example = "22AT100000TV0D2MD6", description = "If this manifest represents a Master Reference Number, the field should contain a valid Master Reference Number.")
  public String getMrn() {
    return mrn;
  }

  public void setMrn(String mrn) {
    this.mrn = mrn;
  }

  public Manifest mawb(String mawb) {
    this.mawb = mawb;
    return this;
  }

   /**
   * If this manifest represents a Master Air Waybill, the field should contain a valid Master Air Waybill number in the format 123-12345678.
   * @return mawb
  **/
  @Schema(example = "180-39408331", description = "If this manifest represents a Master Air Waybill, the field should contain a valid Master Air Waybill number in the format 123-12345678.")
  public String getMawb() {
    return mawb;
  }

  public void setMawb(String mawb) {
    this.mawb = mawb;
  }

  public Manifest airline(String airline) {
    this.airline = airline;
    return this;
  }

   /**
   * If this manifest represents a Master Air Waybill, the field should contain the name of the first carrier.
   * @return airline
  **/
  @Schema(example = "180 Korean Air Lines", description = "If this manifest represents a Master Air Waybill, the field should contain the name of the first carrier.")
  public String getAirline() {
    return airline;
  }

  public void setAirline(String airline) {
    this.airline = airline;
  }

  public Manifest airportOfDeparture(String airportOfDeparture) {
    this.airportOfDeparture = airportOfDeparture;
    return this;
  }

   /**
   * Enter the IATA code corresponding to the Airport of Departure.
   * @return airportOfDeparture
  **/
  @Schema(example = "FRA", description = "Enter the IATA code corresponding to the Airport of Departure.")
  public String getAirportOfDeparture() {
    return airportOfDeparture;
  }

  public void setAirportOfDeparture(String airportOfDeparture) {
    this.airportOfDeparture = airportOfDeparture;
  }

  public Manifest finalDestination(String finalDestination) {
    this.finalDestination = finalDestination;
    return this;
  }

   /**
   * Enter the IATA code corresponding to the Final Destination Airport.
   * @return finalDestination
  **/
  @Schema(example = "ORD", description = "Enter the IATA code corresponding to the Final Destination Airport.")
  public String getFinalDestination() {
    return finalDestination;
  }

  public void setFinalDestination(String finalDestination) {
    this.finalDestination = finalDestination;
  }

  public Manifest containerMode(String containerMode) {
    this.containerMode = containerMode;
    return this;
  }

   /**
   * Indicate the container mode for ULD (Unit Load Device) Buildup. Valid entries include LSE (Loose), ULD, BCH (Buyers consolidation), and OTH (Other).
   * @return containerMode
  **/
  @Schema(example = "LSE", description = "Indicate the container mode for ULD (Unit Load Device) Buildup. Valid entries include LSE (Loose), ULD, BCH (Buyers consolidation), and OTH (Other).")
  public String getContainerMode() {
    return containerMode;
  }

  public void setContainerMode(String containerMode) {
    this.containerMode = containerMode;
  }

  public Manifest deadline(String deadline) {
    this.deadline = deadline;
    return this;
  }

   /**
   * Please specify the deadline date and time for delivering this manifest (MAWB) to the airport in the format dd.MM.yyyy HH:mm.
   * @return deadline
  **/
  @Schema(example = "12.06.2023 12:00", description = "Please specify the deadline date and time for delivering this manifest (MAWB) to the airport in the format dd.MM.yyyy HH:mm.")
  public String getDeadline() {
    return deadline;
  }

  public void setDeadline(String deadline) {
    this.deadline = deadline;
  }

  public Manifest date(String date) {
    this.date = date;
    return this;
  }

   /**
   * Please indicate the desired start date in the format dd.MM.yyyy HH:mm or dd.MM.yyyy, and optionally the time, for the execution of this manifest.
   * @return date
  **/
  @Schema(example = "12.06.2023 12:00", description = "Please indicate the desired start date in the format dd.MM.yyyy HH:mm or dd.MM.yyyy, and optionally the time, for the execution of this manifest.")
  public String getDate() {
    return date;
  }

  public void setDate(String date) {
    this.date = date;
  }

  public Manifest dateto(String dateto) {
    this.dateto = dateto;
    return this;
  }

   /**
   * Please provide the desired completion date in the format dd.MM.yyyy HH:mm or dd.MM.yyyy, and optionally the time, for the execution of this manifest.
   * @return dateto
  **/
  @Schema(example = "12.06.2023 16:00", description = "Please provide the desired completion date in the format dd.MM.yyyy HH:mm or dd.MM.yyyy, and optionally the time, for the execution of this manifest.")
  public String getDateto() {
    return dateto;
  }

  public void setDateto(String dateto) {
    this.dateto = dateto;
  }

  public Manifest depot(String depot) {
    this.depot = depot;
    return this;
  }

   /**
   * Please provide the desired depot for the execution of this manifest.
   * @return depot
  **/
  @Schema(example = "HUB01", description = "Please provide the desired depot for the execution of this manifest.")
  public String getDepot() {
    return depot;
  }

  public void setDepot(String depot) {
    this.depot = depot;
  }

  public Manifest customerNumber(String customerNumber) {
    this.customerNumber = customerNumber;
    return this;
  }

   /**
   * This requirement specifically pertains to MAWB and HAWB manifest types. If the customerNumber field is left blank, it is imperative to ensure that all essential company and address information is provided within the &#x27;customer&#x27; object.
   * @return customerNumber
  **/
  @Schema(example = "10002", description = "This requirement specifically pertains to MAWB and HAWB manifest types. If the customerNumber field is left blank, it is imperative to ensure that all essential company and address information is provided within the 'customer' object.")
  public String getCustomerNumber() {
    return customerNumber;
  }

  public void setCustomerNumber(String customerNumber) {
    this.customerNumber = customerNumber;
  }

  public Manifest customer(AllOfManifestCustomer customer) {
    this.customer = customer;
    return this;
  }

   /**
   * In this section, you have the option to furnish comprehensive customer details tailored for MAWB and HAWB manifest types. This is only required when no companyNumber is provided.
   * @return customer
  **/
  @Schema(description = "In this section, you have the option to furnish comprehensive customer details tailored for MAWB and HAWB manifest types. This is only required when no companyNumber is provided.")
  public AllOfManifestCustomer getCustomer() {
    return customer;
  }

  public void setCustomer(AllOfManifestCustomer customer) {
    this.customer = customer;
  }

  public Manifest subcontractor(AllOfManifestSubcontractor subcontractor) {
    this.subcontractor = subcontractor;
    return this;
  }

   /**
   * In this section, you have the capability to input comprehensive information regarding the subcontractor who has been assigned to the specific manifest.
   * @return subcontractor
  **/
  @Schema(description = "In this section, you have the capability to input comprehensive information regarding the subcontractor who has been assigned to the specific manifest.")
  public AllOfManifestSubcontractor getSubcontractor() {
    return subcontractor;
  }

  public void setSubcontractor(AllOfManifestSubcontractor subcontractor) {
    this.subcontractor = subcontractor;
  }

  public Manifest vehicle(AllOfManifestVehicle vehicle) {
    this.vehicle = vehicle;
    return this;
  }

   /**
   * In this section, you have the capability to input comprehensive information regarding the vehicle which has been assigned to the specific manifest.
   * @return vehicle
  **/
  @Schema(description = "In this section, you have the capability to input comprehensive information regarding the vehicle which has been assigned to the specific manifest.")
  public AllOfManifestVehicle getVehicle() {
    return vehicle;
  }

  public void setVehicle(AllOfManifestVehicle vehicle) {
    this.vehicle = vehicle;
  }

  public Manifest action(String action) {
    this.action = action;
    return this;
  }

   /**
   * This field is solely utilized when the manifest includes warehouse issues, warehouse receipts, or relocation shipments. In such scenarios, the acceptable values are limited to SCAN_IN, SCAN_OUT, and SCAN_RELOCATE.
   * @return action
  **/
  @Schema(description = "This field is solely utilized when the manifest includes warehouse issues, warehouse receipts, or relocation shipments. In such scenarios, the acceptable values are limited to SCAN_IN, SCAN_OUT, and SCAN_RELOCATE.")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }

  public Manifest flightNo(String flightNo) {
    this.flightNo = flightNo;
    return this;
  }

   /**
   * If this manifest represents a Master Air Waybill, please enter the Flight Number in the corresponding field.
   * @return flightNo
  **/
  @Schema(example = "KE946", description = "If this manifest represents a Master Air Waybill, please enter the Flight Number in the corresponding field.")
  public String getFlightNo() {
    return flightNo;
  }

  public void setFlightNo(String flightNo) {
    this.flightNo = flightNo;
  }

  public Manifest subcontractorInfo(String subcontractorInfo) {
    this.subcontractorInfo = subcontractorInfo;
    return this;
  }

   /**
   * If the manifest pertains to a trucking operation and you find that you don&#x27;t require all the details of the subcontractor, such as the address, contact information, and company details, you can simply utilize this field to input the subcontractor&#x27;s name. Alternatively, you can opt to generate all the necessary information related to the subcontractor as outlined in the \&quot;subcontractor\&quot; field.
   * @return subcontractorInfo
  **/
  @Schema(example = "Bigfoot Express", description = "If the manifest pertains to a trucking operation and you find that you don't require all the details of the subcontractor, such as the address, contact information, and company details, you can simply utilize this field to input the subcontractor's name. Alternatively, you can opt to generate all the necessary information related to the subcontractor as outlined in the \"subcontractor\" field.")
  public String getSubcontractorInfo() {
    return subcontractorInfo;
  }

  public void setSubcontractorInfo(String subcontractorInfo) {
    this.subcontractorInfo = subcontractorInfo;
  }

  public Manifest subcontractorVehicleInfo(String subcontractorVehicleInfo) {
    this.subcontractorVehicleInfo = subcontractorVehicleInfo;
    return this;
  }

   /**
   * If the manifest pertains to a trucking operation and you find that you don&#x27;t require all the details of the vehicle, you can simply utilize this field to input the vehicles license plate. Alternatively, you can opt to generate all the necessary information related to the vehicle as outlined in the \&quot;vehicle\&quot; field.
   * @return subcontractorVehicleInfo
  **/
  @Schema(example = "RO IQ 123", description = "If the manifest pertains to a trucking operation and you find that you don't require all the details of the vehicle, you can simply utilize this field to input the vehicles license plate. Alternatively, you can opt to generate all the necessary information related to the vehicle as outlined in the \"vehicle\" field.")
  public String getSubcontractorVehicleInfo() {
    return subcontractorVehicleInfo;
  }

  public void setSubcontractorVehicleInfo(String subcontractorVehicleInfo) {
    this.subcontractorVehicleInfo = subcontractorVehicleInfo;
  }

  public Manifest groundHandler(AllOfManifestGroundHandler groundHandler) {
    this.groundHandler = groundHandler;
    return this;
  }

   /**
   * Get groundHandler
   * @return groundHandler
  **/
  @Schema(description = "")
  public AllOfManifestGroundHandler getGroundHandler() {
    return groundHandler;
  }

  public void setGroundHandler(AllOfManifestGroundHandler groundHandler) {
    this.groundHandler = groundHandler;
  }

  public Manifest shipper(AllOfManifestShipper shipper) {
    this.shipper = shipper;
    return this;
  }

   /**
   * Get shipper
   * @return shipper
  **/
  @Schema(description = "")
  public AllOfManifestShipper getShipper() {
    return shipper;
  }

  public void setShipper(AllOfManifestShipper shipper) {
    this.shipper = shipper;
  }

  public Manifest consignee(AllOfManifestConsignee consignee) {
    this.consignee = consignee;
    return this;
  }

   /**
   * Get consignee
   * @return consignee
  **/
  @Schema(description = "")
  public AllOfManifestConsignee getConsignee() {
    return consignee;
  }

  public void setConsignee(AllOfManifestConsignee consignee) {
    this.consignee = consignee;
  }

  public Manifest unitLoadDevices(List<UnitLoadDevice> unitLoadDevices) {
    this.unitLoadDevices = unitLoadDevices;
    return this;
  }

  public Manifest addUnitLoadDevicesItem(UnitLoadDevice unitLoadDevicesItem) {
    if (this.unitLoadDevices == null) {
      this.unitLoadDevices = new ArrayList<UnitLoadDevice>();
    }
    this.unitLoadDevices.add(unitLoadDevicesItem);
    return this;
  }

   /**
   * Get unitLoadDevices
   * @return unitLoadDevices
  **/
  @Schema(description = "")
  public List<UnitLoadDevice> getUnitLoadDevices() {
    return unitLoadDevices;
  }

  public void setUnitLoadDevices(List<UnitLoadDevice> unitLoadDevices) {
    this.unitLoadDevices = unitLoadDevices;
  }

  public Manifest error(Boolean error) {
    this.error = error;
    return this;
  }

   /**
   * This field signifies the presence of errors in the Manifest.
   * @return error
  **/
  @Schema(example = "false", description = "This field signifies the presence of errors in the Manifest.")
  public Boolean isError() {
    return error;
  }

  public void setError(Boolean error) {
    this.error = error;
  }

  public Manifest shipments(List<Shipment> shipments) {
    this.shipments = shipments;
    return this;
  }

  public Manifest addShipmentsItem(Shipment shipmentsItem) {
    if (this.shipments == null) {
      this.shipments = new ArrayList<Shipment>();
    }
    this.shipments.add(shipmentsItem);
    return this;
  }

   /**
   * Get shipments
   * @return shipments
  **/
  @Schema(description = "")
  public List<Shipment> getShipments() {
    return shipments;
  }

  public void setShipments(List<Shipment> shipments) {
    this.shipments = shipments;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Manifest manifest = (Manifest) o;
    return Objects.equals(this.createManifest, manifest.createManifest) &&
        Objects.equals(this.createHawb, manifest.createHawb) &&
        Objects.equals(this.synchronizeShipments, manifest.synchronizeShipments) &&
        Objects.equals(this.manifestNumber, manifest.manifestNumber) &&
        Objects.equals(this.reference, manifest.reference) &&
        Objects.equals(this.manifestReference, manifest.manifestReference) &&
        Objects.equals(this.description, manifest.description) &&
        Objects.equals(this.mrn, manifest.mrn) &&
        Objects.equals(this.mawb, manifest.mawb) &&
        Objects.equals(this.airline, manifest.airline) &&
        Objects.equals(this.airportOfDeparture, manifest.airportOfDeparture) &&
        Objects.equals(this.finalDestination, manifest.finalDestination) &&
        Objects.equals(this.containerMode, manifest.containerMode) &&
        Objects.equals(this.deadline, manifest.deadline) &&
        Objects.equals(this.date, manifest.date) &&
        Objects.equals(this.dateto, manifest.dateto) &&
        Objects.equals(this.depot, manifest.depot) &&
        Objects.equals(this.customerNumber, manifest.customerNumber) &&
        Objects.equals(this.customer, manifest.customer) &&
        Objects.equals(this.subcontractor, manifest.subcontractor) &&
        Objects.equals(this.vehicle, manifest.vehicle) &&
        Objects.equals(this.action, manifest.action) &&
        Objects.equals(this.flightNo, manifest.flightNo) &&
        Objects.equals(this.subcontractorInfo, manifest.subcontractorInfo) &&
        Objects.equals(this.subcontractorVehicleInfo, manifest.subcontractorVehicleInfo) &&
        Objects.equals(this.groundHandler, manifest.groundHandler) &&
        Objects.equals(this.shipper, manifest.shipper) &&
        Objects.equals(this.consignee, manifest.consignee) &&
        Objects.equals(this.unitLoadDevices, manifest.unitLoadDevices) &&
        Objects.equals(this.error, manifest.error) &&
        Objects.equals(this.shipments, manifest.shipments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createManifest, createHawb, synchronizeShipments, manifestNumber, reference, manifestReference, description, mrn, mawb, airline, airportOfDeparture, finalDestination, containerMode, deadline, date, dateto, depot, customerNumber, customer, subcontractor, vehicle, action, flightNo, subcontractorInfo, subcontractorVehicleInfo, groundHandler, shipper, consignee, unitLoadDevices, error, shipments);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Manifest {\n");
    
    sb.append("    createManifest: ").append(toIndentedString(createManifest)).append("\n");
    sb.append("    createHawb: ").append(toIndentedString(createHawb)).append("\n");
    sb.append("    synchronizeShipments: ").append(toIndentedString(synchronizeShipments)).append("\n");
    sb.append("    manifestNumber: ").append(toIndentedString(manifestNumber)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    manifestReference: ").append(toIndentedString(manifestReference)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    mrn: ").append(toIndentedString(mrn)).append("\n");
    sb.append("    mawb: ").append(toIndentedString(mawb)).append("\n");
    sb.append("    airline: ").append(toIndentedString(airline)).append("\n");
    sb.append("    airportOfDeparture: ").append(toIndentedString(airportOfDeparture)).append("\n");
    sb.append("    finalDestination: ").append(toIndentedString(finalDestination)).append("\n");
    sb.append("    containerMode: ").append(toIndentedString(containerMode)).append("\n");
    sb.append("    deadline: ").append(toIndentedString(deadline)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    dateto: ").append(toIndentedString(dateto)).append("\n");
    sb.append("    depot: ").append(toIndentedString(depot)).append("\n");
    sb.append("    customerNumber: ").append(toIndentedString(customerNumber)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    subcontractor: ").append(toIndentedString(subcontractor)).append("\n");
    sb.append("    vehicle: ").append(toIndentedString(vehicle)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    flightNo: ").append(toIndentedString(flightNo)).append("\n");
    sb.append("    subcontractorInfo: ").append(toIndentedString(subcontractorInfo)).append("\n");
    sb.append("    subcontractorVehicleInfo: ").append(toIndentedString(subcontractorVehicleInfo)).append("\n");
    sb.append("    groundHandler: ").append(toIndentedString(groundHandler)).append("\n");
    sb.append("    shipper: ").append(toIndentedString(shipper)).append("\n");
    sb.append("    consignee: ").append(toIndentedString(consignee)).append("\n");
    sb.append("    unitLoadDevices: ").append(toIndentedString(unitLoadDevices)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    shipments: ").append(toIndentedString(shipments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
