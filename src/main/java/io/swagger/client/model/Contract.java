/*
 * LogistiqoAPI
 *   - Go to [Swagger Editor](https://editor.swagger.io/?url=https://raw.githubusercontent.com/habatlogistiqocom/logistiqoSwaggerYaml/main/logistiqoSwaggerYaml.yaml)   An API, or Application Programming Interface, is a set of protocols,   routines, and tools that enable different software applications to   communicate and exchange data with each other. It defines how software   components should interact and helps to simplify software development by   abstracting the underlying implementation. APIs are essential for building   complex and interconnected software systems.       ## Contact Us     If you have problems or questions, please read the following information:     - [FAQ](https://www.logistiqo.com/faq/)    - [Contact us](https://www.logistiqo.com/contact.php)     To stay informed about the latest developments, you can     - Follow us on [Twitter](https://twitter.com/logistiqo/),
 *
 * OpenAPI spec version: 1.0
 * Contact: info@logistiqo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ContractDetail;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Contract
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-10-19T13:45:14.600795045Z[GMT]")

public class Contract {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("partnerContract")
  private Boolean partnerContract = null;

  @SerializedName("remove")
  private Boolean remove = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("logistiqoDatabase")
  private String logistiqoDatabase = null;

  @SerializedName("logistiqoSubdomain")
  private String logistiqoSubdomain = null;

  @SerializedName("note")
  private String note = null;

  @SerializedName("clientId")
  private String clientId = null;

  @SerializedName("contractStartOn")
  private String contractStartOn = null;

  @SerializedName("contractEndOn")
  private String contractEndOn = null;

  @SerializedName("terminationOn")
  private String terminationOn = null;

  @SerializedName("contractDetails")
  private List<ContractDetail> contractDetails = null;

  @SerializedName("customer")
  private AllOfContractCustomer customer = null;

  public Contract id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Contract active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @Schema(description = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public Contract partnerContract(Boolean partnerContract) {
    this.partnerContract = partnerContract;
    return this;
  }

   /**
   * Get partnerContract
   * @return partnerContract
  **/
  @Schema(description = "")
  public Boolean isPartnerContract() {
    return partnerContract;
  }

  public void setPartnerContract(Boolean partnerContract) {
    this.partnerContract = partnerContract;
  }

  public Contract remove(Boolean remove) {
    this.remove = remove;
    return this;
  }

   /**
   * Get remove
   * @return remove
  **/
  @Schema(description = "")
  public Boolean isRemove() {
    return remove;
  }

  public void setRemove(Boolean remove) {
    this.remove = remove;
  }

  public Contract code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @Schema(description = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Contract name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Contract description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Contract logistiqoDatabase(String logistiqoDatabase) {
    this.logistiqoDatabase = logistiqoDatabase;
    return this;
  }

   /**
   * Get logistiqoDatabase
   * @return logistiqoDatabase
  **/
  @Schema(description = "")
  public String getLogistiqoDatabase() {
    return logistiqoDatabase;
  }

  public void setLogistiqoDatabase(String logistiqoDatabase) {
    this.logistiqoDatabase = logistiqoDatabase;
  }

  public Contract logistiqoSubdomain(String logistiqoSubdomain) {
    this.logistiqoSubdomain = logistiqoSubdomain;
    return this;
  }

   /**
   * Get logistiqoSubdomain
   * @return logistiqoSubdomain
  **/
  @Schema(description = "")
  public String getLogistiqoSubdomain() {
    return logistiqoSubdomain;
  }

  public void setLogistiqoSubdomain(String logistiqoSubdomain) {
    this.logistiqoSubdomain = logistiqoSubdomain;
  }

  public Contract note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @Schema(description = "")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public Contract clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @Schema(description = "")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public Contract contractStartOn(String contractStartOn) {
    this.contractStartOn = contractStartOn;
    return this;
  }

   /**
   * Get contractStartOn
   * @return contractStartOn
  **/
  @Schema(description = "")
  public String getContractStartOn() {
    return contractStartOn;
  }

  public void setContractStartOn(String contractStartOn) {
    this.contractStartOn = contractStartOn;
  }

  public Contract contractEndOn(String contractEndOn) {
    this.contractEndOn = contractEndOn;
    return this;
  }

   /**
   * Get contractEndOn
   * @return contractEndOn
  **/
  @Schema(description = "")
  public String getContractEndOn() {
    return contractEndOn;
  }

  public void setContractEndOn(String contractEndOn) {
    this.contractEndOn = contractEndOn;
  }

  public Contract terminationOn(String terminationOn) {
    this.terminationOn = terminationOn;
    return this;
  }

   /**
   * Get terminationOn
   * @return terminationOn
  **/
  @Schema(description = "")
  public String getTerminationOn() {
    return terminationOn;
  }

  public void setTerminationOn(String terminationOn) {
    this.terminationOn = terminationOn;
  }

  public Contract contractDetails(List<ContractDetail> contractDetails) {
    this.contractDetails = contractDetails;
    return this;
  }

  public Contract addContractDetailsItem(ContractDetail contractDetailsItem) {
    if (this.contractDetails == null) {
      this.contractDetails = new ArrayList<ContractDetail>();
    }
    this.contractDetails.add(contractDetailsItem);
    return this;
  }

   /**
   * Get contractDetails
   * @return contractDetails
  **/
  @Schema(description = "")
  public List<ContractDetail> getContractDetails() {
    return contractDetails;
  }

  public void setContractDetails(List<ContractDetail> contractDetails) {
    this.contractDetails = contractDetails;
  }

  public Contract customer(AllOfContractCustomer customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @Schema(description = "")
  public AllOfContractCustomer getCustomer() {
    return customer;
  }

  public void setCustomer(AllOfContractCustomer customer) {
    this.customer = customer;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Contract contract = (Contract) o;
    return Objects.equals(this.id, contract.id) &&
        Objects.equals(this.active, contract.active) &&
        Objects.equals(this.partnerContract, contract.partnerContract) &&
        Objects.equals(this.remove, contract.remove) &&
        Objects.equals(this.code, contract.code) &&
        Objects.equals(this.name, contract.name) &&
        Objects.equals(this.description, contract.description) &&
        Objects.equals(this.logistiqoDatabase, contract.logistiqoDatabase) &&
        Objects.equals(this.logistiqoSubdomain, contract.logistiqoSubdomain) &&
        Objects.equals(this.note, contract.note) &&
        Objects.equals(this.clientId, contract.clientId) &&
        Objects.equals(this.contractStartOn, contract.contractStartOn) &&
        Objects.equals(this.contractEndOn, contract.contractEndOn) &&
        Objects.equals(this.terminationOn, contract.terminationOn) &&
        Objects.equals(this.contractDetails, contract.contractDetails) &&
        Objects.equals(this.customer, contract.customer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, active, partnerContract, remove, code, name, description, logistiqoDatabase, logistiqoSubdomain, note, clientId, contractStartOn, contractEndOn, terminationOn, contractDetails, customer);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Contract {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    partnerContract: ").append(toIndentedString(partnerContract)).append("\n");
    sb.append("    remove: ").append(toIndentedString(remove)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    logistiqoDatabase: ").append(toIndentedString(logistiqoDatabase)).append("\n");
    sb.append("    logistiqoSubdomain: ").append(toIndentedString(logistiqoSubdomain)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    contractStartOn: ").append(toIndentedString(contractStartOn)).append("\n");
    sb.append("    contractEndOn: ").append(toIndentedString(contractEndOn)).append("\n");
    sb.append("    terminationOn: ").append(toIndentedString(terminationOn)).append("\n");
    sb.append("    contractDetails: ").append(toIndentedString(contractDetails)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
